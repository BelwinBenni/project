#include <LiquidCrystal.h>

LiquidCrystal lcd(8, 9, 10, 11, 12, 13);  // LCD display connections (RS, Enable, D4, D5, D6, D7)

const int flexPin_indexFinger = A3;   // Analog pin connected to the flex sensor on the index finger
const int flexPin_middleFinger = A2;  // Analog pin connected to the flex sensor on the middle finger
const int accelPin_xAxis = A0;        // Analog pin connected to the accelerometer x-axis
const int accelPin_yAxis = A1;        // Analog pin connected to the accelerometer y-axis


void setup() {
  Serial.begin(9600);
  lcd.begin(16, 2);  // Initialize LCD display (16 columns, 2 rows)
  lcd.setCursor(0, 0);
  lcd.print("The Gesture Is: ");  //LCD displays this on the first row
  pinMode(2, OUTPUT);             //Pin connected to the ISD1820 module 1
  digitalWrite(2, LOW);           //Pin connected to the ISD1820 module 1
  pinMode(3, OUTPUT);             //Pin connected to the ISD1820 module 2
  digitalWrite(3, LOW);           //Pin connected to the ISD1820 module 2
  pinMode(4, OUTPUT);             //Pin connected to the ISD1820 module 3
  digitalWrite(4, LOW);           //Pin connected to the ISD1820 module 3
  pinMode(5, OUTPUT);             //Pin connected to the ISD1820 module 4
  digitalWrite(5, LOW);           //Pin connected to the ISD1820 module 4
  pinMode(6, OUTPUT);             //Pin connected to the ISD1820 module 5
  digitalWrite(6, LOW);           //Pin connected to the ISD1820 module 5
  pinMode(7, OUTPUT);             //Pin connected to the ISD1820 module 6
  digitalWrite(7, LOW);           //Pin connected to the ISD1820 module 6
  analogReference(DEFAULT);
  pinMode(A0, INPUT);
  pinMode(A1, INPUT);
  pinMode(A2, INPUT);
  pinMode(A3, INPUT);
}

void loop() {
// Reading sensor values
  int flexIndex = analogRead(flexPin_indexFinger);
  int flexMiddle = analogRead(flexPin_middleFinger);
  int accelX = analogRead(accelPin_xAxis);
  int accelY = analogRead(accelPin_yAxis);
  bool UP = false, DOWN = false, LEFT = false, RIGHT = false, IndexFlex = false, MiddleFlex = false, CENTER;
// Hand recognizition
  if (accelX > 110 && accelX < 135 && accelY > 120 && accelY < 127) {
    CENTER = true;
    Serial.println("Centre");
  }
  if (flexIndex < 200) {
    IndexFlex = true;
    Serial.println("index flexed");
  }
  if (flexMiddle < 200) {
    MiddleFlex = true;
    Serial.println("middle flexed");
  }
  if (accelX <= 110) {
    LEFT = true;
    RIGHT = false;
    Serial.println("left");
  }
  if (accelX >= 135) {
    RIGHT = true;
    LEFT = false;
    Serial.println("right");
  }
  if (accelY <= 110) {
    UP = true;
    DOWN = false;
    Serial.println("up");
  }
  if (accelY >= 127) {
    DOWN = true;
    UP = false;
    Serial.println("down");
  }
// Gesture recognizition 
  if (IndexFlex == true && MiddleFlex == true) {
    Serial.println("Gesture 1: Fist");
    lcd.setCursor(0, 1);
    lcd.print("Fist            ");
    digitalWrite(2, HIGH);
    delay(500);
    digitalWrite(2, LOW);
  } else if (DOWN == true && MiddleFlex == true && IndexFlex == false) {
    Serial.println("Gesture 2: Down");
    lcd.setCursor(0, 1);
    lcd.print("Look Down       ");
    digitalWrite(3, HIGH);
    delay(500);
    digitalWrite(3, LOW);
  } else if (UP == true && MiddleFlex == true && IndexFlex == false) {
    Serial.println("Gesture 3: One");
    lcd.setCursor(0, 1);
    lcd.print("One             ");
    digitalWrite(4, HIGH);
    delay(500);
    digitalWrite(4, LOW);
  } else if (LEFT == true && MiddleFlex == true && IndexFlex == false) {
    Serial.println("Gesture 4: Right");
    lcd.setCursor(0, 1);
    lcd.print("Look Right      ");
    digitalWrite(5, HIGH);
    delay(500);
    digitalWrite(5, LOW);
  } else if (DOWN == true && MiddleFlex == false && IndexFlex == false) {
    Serial.println("Gesture 5: Come");
    lcd.setCursor(0, 1);
    lcd.print("Come");
    digitalWrite(6, HIGH);
    delay(500);
    digitalWrite(6, LOW);
  } else if (CENTER == true && IndexFlex == true && MiddleFlex == false) {
    Serial.println("Gesture 6: Straight");
    lcd.setCursor(0, 1);
    lcd.print("Look Straight   ");
    digitalWrite(7, HIGH);
    delay(500);
    digitalWrite(7, LOW);
  } else if (UP == true && IndexFlex == false && MiddleFlex == false) {
    Serial.println("Gesture 7: HELP");
    lcd.setCursor(0, 0);
    lcd.print("Help!!          ");
    lcd.setCursor(0, 1);
    lcd.print("Sending Alert!  ");
    String phoneNumber = "+919650422555";             // The reciepinet's phone no.
    String message = "Alerts from the glove user!!";  // The message to be sent in SMS
    // AT command to set SIM900A in SMS text mode
    Serial.println("AT+CMGF=1");
    delay(100);
    // AT command to set the recipient's phone number
    Serial.print("AT+CMGS=\"");
    Serial.print(phoneNumber);
    Serial.println("\"");
    delay(100);
    // Sending the message
    Serial.print(message);
    delay(100);
    Serial.write(26);  // Equivalent to sending Ctrl+Z to terminate the message
    delay(100);
    // Clear the buffer
    while (Serial.available()) {
      Serial.read();
    }
    // Confirmation message
    Serial.println("SMS sent!");
    lcd.setCursor(0, 0);
    lcd.print("Alert Sent!!   ");
    delay(1000);
  } else {
    Serial.println("No gesture");
    lcd.setCursor(0, 0);
    lcd.print("Please          ");
    lcd.setCursor(0, 1);
    lcd.print("Try Again       ");
  }
  delay(500);
}
